{
  "useMemo": {
    "prefix": "um",
    "body": [
      "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}])$0"
    ],
    "description": "React useMemo() hook"
  },
  "useCallback": {
    "prefix": "ucb",
    "body": [
      "const ${1:memoizedCallback} = useCallback(",
      "\t() => {",
      "\t\t${2:doSomething}(${3:a}, ${4:b})",
      "\t},",
      "\t[${5:a}, ${6:b}],",
      ")$0"
    ],
    "description": "React useCallback() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$1", "}, [${3}])$0"],
    "description": "React useEffect() hook"
  },
  "useState": {
    "prefix": "us",
    "body": "const [${1}, ${2}] = useState(${3})$0",
    "description": "use state hook"
  },
  "useRequest": {
    "prefix": "ur",
    "body": "const [${1}, ${2}] = useRequest(${3})$0",
    "description": "use query"
  },
  "useQuery": {
    "prefix": "uq",
    "body": "const [${1}, ${2}] = useQuery(${3})$0",
    "description": "use query"
  },
  "useBoolean": {
    "prefix": "ub",
    "body": "const {state:${1}, toggle:toggle${1}} = useBoolean(${2})$0",
    "description": "use query"
  },
  "reactFunctionComponent": {
    "prefix": "rfc",
    "body": "import React from 'react'\n\nexport const ${TM_FILENAME_BASE}: React.FC<{}> = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
    "description": "Creates a React functional component without PropTypes"
  },
  "console.log a variable": {
    "prefix": "cv",
    "body": "console.log('${0}:', ${0})"
  },
  "imoprt": {
    "prefix": "im",
    "body": "import ${2} from ${1}"
  },
  "cp": {
    "prefix": "cp",
    "body": "const { ${0} } = props"
  },
  "cn": {
    "prefix" : "cn",
    "body": "const { ${2} } = ${1}"
  },
  ":construction: chore:": {
    "prefix":"cc",
    "body": ":construction: chore:$0"
  },
  ":bug: fix:": {
    "prefix":"bf",
    "body": ":bug: fix:${0}"
  }
}
