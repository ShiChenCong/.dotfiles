{
  "useMemo": {
    "prefix": "ume",
    "body": [
      "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}])$0"
    ],
    "description": "React useMemo() hook"
  },
  "useCallback": {
    "prefix": "ucb",
    "body": [
      "const ${1:memoizedCallback} = useCallback(",
      "\t() => {",
      "\t\t${2:doSomething}(${3:a}, ${4:b})",
      "\t},",
      "\t[${5:a}, ${6:b}],",
      ")$0"
    ],
    "description": "React useCallback() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$1", "}, [${3}])$0"],
    "description": "React useEffect() hook"
  },
  "useState": {
    "prefix": "us",
    "body": "const [${1}, ${2}] = useState(${3})$0",
    "description": "use state hook"
  },
  "useRequest": {
    "prefix": "ur",
    "body": "const [${1}, ${2}] = useRequest(${3})$0",
    "description": "use query"
  },
  "useQuery": {
    "prefix": "uq",
    "body": "const [${1}, ${2}] = useQuery(${3})$0",
    "description": "use query"
  },
  "useBoolean": {
    "prefix": "ub",
    "body": "const {state:${1}, toggle:toggle${1}} = useBoolean(${2})$0",
    "description": "use query"
  },
  "reactFunctionComponent": {
    "prefix": "rfc",
    "body": "import React from 'react'\n\nexport const ${TM_FILENAME_BASE}: React.FC<{}> = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
    "description": "Creates a React functional component without PropTypes"
  },
  "div": {
    "prefix": "div",
    "body": ["<div>$1</div>"],
    "description": "HTML - Defines a section in a document",
    "scope": "text.html"
  },
  "i": {
    "prefix": "i",
    "body": "<i>$1</i>$2",
    "description": "HTML - Defines italic text",
    "scope": "text.html"
  },
  "iframe": {
    "prefix": "iframe",
    "body": "<iframe src=\"$1\">$2</iframe>$3",
    "description": "HTML - Defines an inline sub window",
    "scope": "text.html"
  },
  "img": {
    "prefix": "img",
    "body": "<img src=\"$1\" alt=\"$2\"/>$3",
    "description": "HTML - Defines an image",
    "scope": "text.html"
  },
  "a": {
    "prefix": "a",
    "body": "<a href=\"$1\">$2</a>$3",
    "description": "HTML - Defines a hyperlink",
    "scope": "text.html"
  },
  "input": {
    "prefix": "input",
    "body": "<input type=\"$1\" name=\"$2\" value=\"$3\">$4",
    "description": "HTML - Defines an input field",
    "scope": "text.html"
  },
  "li": {
    "prefix": "li",
    "body": "<li>$1</li>$2",
    "description": "HTML - Defines a list item",
    "scope": "text.html"
  },
  "span": {
    "prefix": "span",
    "body": "<span>$1</span>$2",
    "description": "HTML - Defines a list item",
    "scope": "text.html"
  },
  "Col": {
    "prefix": "Col",
    "body": "<Col>$1</Col>$2",
    "scope": "text.html"
  },
  "Button": {
    "prefix": "Button",
    "body": "<Button>$1</Button>$2",
    "scope": "text.html"
  },
  "Row": {
    "prefix": "Row",
    "body": "<Row>$1</Row>$2",
    "scope": "text.html"
  },
  "Select": {
    "prefix": "Select",
    "body": "<Select>$1</Select>$2",
    "scope": "text.html"
  },
  "Input": {
    "prefix": "Input",
    "body": "<Input>$1</Input>$2",
    "scope": "text.html"
  },
  "Cascader": {
    "prefix": "Cascader",
    "body": "<Cascader>$1</Cascader>$2",
    "scope": "text.html"
  },
  "Divider": {
    "prefix": "Divider",
    "body": "<Divider>$1</Divider>$2",
    "scope": "text.html"
  },
  "console.log": {
    "prefix": "cl",
    "body": "console.log(${0})"
  },
  "console.log a variable": {
    "prefix": "cv",
    "body": "console.log('${0}:', ${0})"
  }
}
